apply plugin: 'AndResGuard' //应用AndResGuard插件
andResGuard {
    mappingFile = null // = file("./resource_mapping.txt") //用于keep住资源的路径的mapping文件所在路径
    use7zip = true    //启用压缩。为true时，useSign必须为true
    useSign = true    // 启用签名。为true时，需要配置signConfig
    keepRoot = false // 为true时，会keep住所有资源的原始路径，只混淆资源的名字
    whiteList = [ //白名单，支持通配符，【+】代表1个或多个，【?】代表0个或1个，【*】代表0个或多个
                  "R.mipmap.app_ic_launcher", "R.drawable.icon",// for your icon
                  "R.string.com.crashlytics.*",// for fabric，详见https://docs.fabric.io/android/crashlytics/build-tools.html
                  "R.string.google_app_id",// for google-services
                  "R.id.*",//任意id

    ]
    compressFilePattern = [ //需要压缩的文件的匹配规则，一般这里不需要动。支持 ? + * 通配符
                            "*.png",
                            "*.jpg",
                            "*.jpeg",
                            "*.gif",
                            "resources.arsc"
    ]
    sevenzip { //配置7Zip，只需设置 artifact 或 path；支持同时设置，但此时以 path 的值为优先
        artifact = 'com.tencent.mm:SevenZip:1.2.13'
        //path = "/usr/local/bin/7za"  //path指本地安装的7za(7zip命令行工具)
    }

    // finalApkBackupPath = "${project.rootDir}/final.apk" //可选，指定生成的apk的保存路径
    // digestalg = "SHA-256" //可选: 指定v1签名时生成jar文件的摘要算法，默认值为“SHA-1”
}